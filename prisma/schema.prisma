generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_WITH_SCHEMA")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  viewCount Int      @default(0)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model Player {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime? @default(now())
  nickname       String
  trainerCode    String
  location       String?
  region         Region    @relation(fields: [regionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  regionId       Int
  wantedHighPrio PlayerHighPrioRegions[]
  wantedLowPrio  PlayerLowPrioRegions[]
}

model Region {
  id             Int      @id
  name           String
  code           String
  players        Player[]
  highPrioPlayer PlayerHighPrioRegions[]
  lowPrioPlayer  PlayerLowPrioRegions[]
}

model PlayerHighPrioRegions {
  player Player @relation(fields: [playerId], references: [id])
  playerId Int
  region Region @relation(fields: [regionId], references: [id])
  regionId Int


  @@id([playerId, regionId])
}

model PlayerLowPrioRegions {
  player Player @relation(fields: [playerId], references: [id])
  playerId Int
  region Region @relation(fields: [regionId], references: [id])
  regionId Int


  @@id([playerId, regionId])
}
